generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          String?   @default("user")
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Product {
    id           String       @id @default(cuid())
    name         String       @unique
    subname      String?
    brand        String
    image        String?
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @default(now())
    Brand        Brand        @relation(fields: [brand], references: [name], onDelete: NoAction, onUpdate: NoAction)
    descriptions Description?
}

model Description {
    id            String   @id @default(cuid())
    info          String?
    detail        String?
    use           String?
    price         Int
    discountPrice Int?
    weight        Int?
    flavors       String[]
    benefits      String[]
    productId     String   @unique
    ingredients   String[]
    product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Brand {
    id         BigInt    @id @default(autoincrement())
    name       String?   @unique
    created_at DateTime? @default(now()) @db.Timestamptz(6)
    image      String?
    Product    Product[]
}
